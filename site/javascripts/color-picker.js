// –°–∏—Å—Ç–µ–º–∞ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞ —à–∞–ø–∫–∏
document.addEventListener('DOMContentLoaded', function() {
    // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
    const colorPickerPanel = document.createElement('div');
    colorPickerPanel.className = 'color-picker-panel';
    colorPickerPanel.innerHTML = `
        <div class="color-picker-header">üé® –í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç —à–∞–ø–∫–∏</div>
        <div class="color-options">
            <div class="color-option blue active" data-theme="blue">–°–∏–Ω–∏–π</div>
            <div class="color-option orange" data-theme="orange">–û—Ä–∞–Ω–∂–µ–≤—ã–π</div>
            <div class="color-option green" data-theme="green">–ó–µ–ª–µ–Ω—ã–π</div>
            <div class="color-option purple" data-theme="purple">–§–∏–æ–ª–µ—Ç–æ–≤—ã–π</div>
            <div class="color-option red" data-theme="red">–ö—Ä–∞—Å–Ω—ã–π</div>
            <div class="color-option dark" data-theme="dark">–°–µ—Ä—ã–π</div>
        </div>
    `;
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏
    const toggleButton = document.createElement('button');
    toggleButton.className = 'color-picker-toggle';
    toggleButton.innerHTML = 'üé®';
    toggleButton.title = '–í—ã–±—Ä–∞—Ç—å —Ü–≤–µ—Ç —à–∞–ø–∫–∏';
    
    // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    document.body.appendChild(colorPickerPanel);
    document.body.appendChild(toggleButton);
    
    // –¶–≤–µ—Ç–æ–≤—ã–µ —Å—Ö–µ–º—ã
    const colorSchemes = {
        blue: {
            primary: '#1976d2',
            accent: '#64b5f6'
        },
        orange: {
            primary: '#ff6b35',
            accent: '#ffb74d'
        },
        green: {
            primary: '#388e3c',
            accent: '#81c784'
        },
        purple: {
            primary: '#7b1fa2',
            accent: '#ba68c8'
        },
        red: {
            primary: '#d32f2f',
            accent: '#ef5350'
        },
        dark: {
            primary: '#424242',
            accent: '#757575'
        }
    };
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º—ã
    function applyColorScheme(theme) {
        const scheme = colorSchemes[theme];
        if (!scheme) return;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        document.documentElement.style.setProperty('--header-primary', scheme.primary);
        document.documentElement.style.setProperty('--header-accent', scheme.accent);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É
        toggleButton.style.backgroundColor = scheme.primary;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –≤ localStorage
        localStorage.setItem('header-theme', theme);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
        document.querySelectorAll('.color-option').forEach(option => {
            option.classList.remove('active');
        });
        document.querySelector(`[data-theme="${theme}"]`).classList.add('active');
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ü–≤–µ—Ç–æ–≤
    document.querySelectorAll('.color-option').forEach(option => {
        option.addEventListener('click', () => {
            const theme = option.dataset.theme;
            applyColorScheme(theme);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    toggleButton.addEventListener('click', () => {
        if (colorPickerPanel.style.display === 'none' || colorPickerPanel.style.display === '') {
            colorPickerPanel.style.display = 'block';
        } else {
            colorPickerPanel.style.display = 'none';
        }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ—ë
    document.addEventListener('click', (e) => {
        if (!colorPickerPanel.contains(e.target) && !toggleButton.contains(e.target)) {
            colorPickerPanel.style.display = 'none';
        }
    });
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é —Ç–µ–º—É
    const savedTheme = localStorage.getItem('header-theme') || 'green';
    applyColorScheme(savedTheme);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
    setTimeout(() => {
        toggleButton.style.opacity = '0';
        toggleButton.style.transform = 'scale(0.8)';
        toggleButton.style.transition = 'all 0.3s ease';
        
        setTimeout(() => {
            toggleButton.style.opacity = '1';
            toggleButton.style.transform = 'scale(1)';
        }, 100);
    }, 1000);
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ü–≤–µ—Ç–∞–º–∏
function getCurrentTheme() {
    return localStorage.getItem('header-theme') || 'green';
}

function setRandomTheme() {
    const themes = ['blue', 'orange', 'green', 'purple', 'red', 'dark'];
    const randomTheme = themes[Math.floor(Math.random() * themes.length)];
    applyColorScheme(randomTheme);
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
window.ColorPicker = {
    getCurrentTheme,
    setRandomTheme,
    applyColorScheme: function(theme) {
        const colorSchemes = {
            blue: { primary: '#1976d2', accent: '#64b5f6' },
            orange: { primary: '#ff6b35', accent: '#ffb74d' },
            green: { primary: '#388e3c', accent: '#81c784' },
            purple: { primary: '#7b1fa2', accent: '#ba68c8' },
            red: { primary: '#d32f2f', accent: '#ef5350' },
            dark: { primary: '#424242', accent: '#757575' }
        };
        
        const scheme = colorSchemes[theme];
        if (scheme) {
            document.documentElement.style.setProperty('--header-primary', scheme.primary);
            document.documentElement.style.setProperty('--header-accent', scheme.accent);
            localStorage.setItem('header-theme', theme);
        }
    }
};
